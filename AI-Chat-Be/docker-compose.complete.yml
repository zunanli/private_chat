version: '3.8'

services:
  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: aichat-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 630wujiayuwy
      MYSQL_DATABASE: aiChat
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - aichat-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: aichat-redis
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - aichat-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 10s
      retries: 5

  # Node.js 应用服务
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: aichat-app
    restart: always
    ports:
      - '3000:3000'
    environment:
      # 数据库配置
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USERNAME: root
      DB_PASSWORD: 630wujiayuwy
      DB_DATABASE: aiChat
      # Redis配置
      REDIS_HOST: redis
      REDIS_PORT: 6379
      # 应用配置
      NODE_ENV: production
      PORT: 3000
    volumes:
      - ./uploads:/app/uploads  # 文件上传目录
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - aichat-network

volumes:
  mysql_data:
  redis_data:

networks:
  aichat-network:
    driver: bridge